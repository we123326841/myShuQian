p.haha tab键  p#haha tab键

1.user agent stylesheet 表示浏览器默认设置,

2.div 跟span 不会影响任何视觉效果

user agent stylesheet是灰色的 灰色Inherited from一律不要看 是系统默认的 我们只看白色的Inherited from

另外Inherited 里面的属性 如果是 暗淡色说明 是没有继承的 如果是亮色说明是继承的 但是有一个特例(text-decoration虽然是暗淡色但是也是继承的)

2.2 选择上了 才会有权重
3.有权重的和没有权重的 优先选有权重的(没有权重指的是没有选中当前的标签  选中标签的方式有类选择器 id选择器 标签选择器) 如果权重相等 谁在后 就选谁

3.1 有权重的优先看id 再看 class 再看 标签

如果都没有权重 谁近 选谁  如果一样近 并且选择器一样多 谁在后 选谁(其实跟有权重的判断方式一致)

4.a 是超文本连接 不能继承

5 标签选择器一定是选中标签 比如 <div class=“div1”> <div> <div>你麻痹</div> </div> </div>  .div1 div{ color:red}  那么 .div div 是有权重的 也就是被选中了 权重为 0,1,1

5.1 important 会影响 权重 把权重提升到最高

6. important不会影响 就近原则 但是如果两个标签都没有选上 但是一样近 那么就会有影响

7.在html里面 你写一大堆英文字母 没有空格 会被认为是一个单词 不会换行

8.padding 跟内容区域 是同意颜色的 无法修改padding颜色

9.ul默认是有左内边距(padding-left)跟外边距的 当清除左内边距 圆点就没了 是因为 左内边距本来就是用来放置圆点的


10.两个浏览器 显示同一个ridge 有细微显示差异 这个不叫兼容性问题


11.图片和表单元素相当于文字 也会出现空白折叠现象
<img src=“one.jpg”/>
<img src=“two.jpg”/>

<span>嘻嘻嘻</span>
<span>呼呼呼</span>
以上代码会出现空白折叠现象 解决办法
 <img src=“one.jpg”/><img src=“two.jpg”/><span>嘻嘻嘻</span><span>呼呼呼</span>
这样就紧密排列 不会出现空白折叠现象

12 css里面把标签分为块级元素和行内元素
快级元素:
一.霸占一行不能与其他任何元素并列
二.能接受宽,高
三.如果不设置宽,那么宽度将默认变为父亲的100%


行内元素:
一.与其他行内元素并排
二.不能设置宽高 默认的宽度就是文字的宽度

13 html里面把标签分为:文本级和容器级别

文本级:p ,span ,a,b,i,u,em 只能文字 图片 表单元素
容器级:div,h系列,li,dt,dd

14 所有的文本级标签,都是行内元素,除了p是块级元素 , 所有的容器级标签都是块级元素

15 空白折叠现象 只有行内元素和文字才有空白折叠现象(文字包含文字,图片,表单元素)

16.一旦设置浮动就脱离标准文档流了 都可以设置宽高了 并且不分行内和块级元素 是漂浮在标准文档流之上的

17.所谓的inline,block 是在标准流里

18 让行内元素设置宽高 只需要把其设置成浮动就可以了 不用加block

19 浮动可以挡住盒子 但是挡不住盒子里面的字

20 div上面的标签是浮动 div不是浮动 那么这个div 要往上移动

21 不并排的盒子不用搞浮动 并排的要浮动

22 padding 跟内容区域都是有颜色的

23 标准文档流做不出网页因为并排不能改宽高 ,需要浮动来脱离标准文档流 浮动的意义是做并排用的
24 浮动有几个性质 脱标 贴边 自围

25 一个浮动a span 是不需要设置display:block 就能够设置宽高了 因为浮动之后脱离了标准流,所以标准流里面的法律都不适用了

26 一个浮动的元素,如果没有设置width 那么将自动收缩为文字的宽度

27 浮动元素 里面的子元素依然是标准文档流

28 HTML中的span和div本身没有实际意义即不会影响语义，但是页面布局中最常用到的两个标签。
span属于行内元素，即添加span元素不会换行，页面结构也不会有任何变化，一般嵌套在文本的外边，可以给span标签设置class或者ID属性，以方便对其内部的文本添加特殊样式。
div属于块状元素，即添加div标签会引起换行，同样可以作为“钩子”，添加特殊样式。


29 关于div 里面的 子元素 如果是浮动的 如果div 没有设置宽高 将不会包含浮动的元素 (就是不能正确的浮动)

30 有浮动的盒子 父元素要加高 并且要比儿子要高

31 一旦父元素没有高的时候 就会去找上一个元素 放在上一个元素后面 

32 一个子元素有浮动 父元素div 没有设置高 那么不管父元素下面的元素的子元素有没有浮动都会贴着后面 设置了高之后 那么不管父元素下面的元素的子元素有没有浮动 都会按照正常一搬规律排列


33 div的子元素 设置了浮动 那么 div就没有了高 如果没有设置的话 是有高的

34 设置了clear:both 会让margin 失效 因为div 没有高

35 浮动拖标 不能撑出高  

36 判断一个元素是不是浮动 就看它有没有设置float属性 有设置float 就是浮动元素  没有设置float 就不是浮动元素    跟clear没有任何关系

37 属性前面加下划线只能在IE6中起作用 IE6不支持微型盒子 (微型盒子指的是高小于12px的盒子)  想要支持卫星盒子必须要加一个font-size(_font-size) <=微型盒子高 在css里面 0 就是 0px 这个px可以省略   大于12px的盒子 在IE6是正常的

38 IE6不支持用overflow:hidden 来清除浮动的  要加zoom:1;


39 标准文档流中 竖直方向的margin不叠加,以较大的为准  水平方向的margin叠加

注意这里说的是在标准文档流中,如果都是浮动元素 就是叠加了

40 margin针对的是兄弟之间的外间距 最好不要用margin表达父子之间的距离,要善用父亲的padding 而不是儿子的margin

41 margin 0 auto 必须要有明确的宽度 就是说要有width这个属性  行业元素是不能用这个属性的

42 margin: 0 auto 是在居中盒子 盒子浮动了,绝对定位了,固定定位了,都不能使用mairgin:0 auto

43 auto 只能左右方向与作用 对于上下方向 是没有作用的

44 行高24像素 每一个文字在一个高为24像素的行里 文字一定是在行里垂直居中的 每一行是24像素 2行就是48像素 padding top bottom其实是到行高的边缘的距离  left right 是到字的边缘
45 行高可以自己设置 并不是固定的..

46 font-size 14px 真是意义是 14px高的字 . line-height 24px  字上边到上行高边5px 字下边到下行高边5px 

如果 line-height = 25px  ,font-size 14px   , 25-14 = 11 那么字上边到上行高边5px 字下边到下行高边6px

47 a标签是行内元素

48 浮动元素 会被内容撑出宽高

49 width :1000px margin : 0 auto; 不给高度 可以负责定位

50 padding 也可以显示图片

51 一个元素的子元素浮动 那么这个元素 不会有高度  如果这个元素也是浮动 子元素也是浮动那么 这个元素也会有高
51.1  overflow:hidden 也会让这个元素有高 区别在于 元素浮动的话 宽也跟子元素一样 
52 padding设置之后 padding区域的颜色取决于亮点 一是 如果这个元素有颜色 那么这个padding就是这个颜色 如果没有设置颜色 那么这个padding 默认是透明的

53 浮动的元素 会自动成为内容区域的大小不管内容区域有没有浮动

54 背景图片 padding 可以作为背景图片区域 

54.1 浮动可以将行内元素转化成行内块元素
55 绝对定位 固定定位 浮动脱标

56 浮动和相对定位没有冲突 一个元素有浮动和相对定位 还是脱标 脱标原因是因为浮动

57 绝对定位 有子绝父相  固定定位 没有子绝父相

58 父元素不给高 子元素可以撑起来... 元素没有高不会影响什么 起到一个定位
59 不支持子固父相

60 z-index 用于定位 在浮动中不起作用  定位了的元素，永远能够压住没有定位的元素。

61 relative 虽然没有脱标 但是还是可以盖住 没有定位的元素

62 父盒子浮动 里面的元素 依然默认是标准流

63 <li><a>的</a></li> 给li加text-algin:center 其实是继承给a了  所以a的文字居中

64 没高也可以设置padding


65 如果父盒子有定位元素 不要使用overflow hidden

66 行内块元素(inline-block) img input 在同一行显示 可以设置宽度 高度

67 父元素加font-size: 0 可以去掉子元素(inline-block)空格间隙
68 border: 0 none 可以去掉边框

判断是不是inline-block 
inline:意思是可以与其他元素排成一排
block:意思是它可以设置高宽
如果符合两个条件就是inline-block，你用CSS设置一下看看情况就明白

<div class=“content”>aaa</div>

.content::after{
  content:’bbbb’;
color:red
}

类似<div class=“content”>aaa <after>bbbb</after></div>

element.style 行内样式

pseudo 是伪对象

属性以data开头的 只是记录数据的 没有任何作用

document.body.contentEditable = true 可以编辑html页面

不认识的标签 全部当div处理


兼容video的浏览器 是播放不了 object标签的视频的  也不能显示video里面的文字 除非你把vedio标签写错. 不兼容video的浏览器 是可以播放object的视频的


所谓的不兼容标签 就是 相当于兼容此标签的浏览器 只不过标签写错了

svg 一般定义 图标 字体
object 载入第三方媒体用到的标签 (flash palyer)

使用svg file的方式 使用<embed> <object> <iframe> Ajax方式加载

Ajax 请求相当于是替换了<svg>文件

svg是不支持src这个属性的

iframe 可以把别的网页文档载进来  因为svg本身也是一个文档 所以iframe可以载进去

alt + 左键

谷歌浏览器有个快捷键esc



比如一个button放在一个form中，这个button的Default就是提交（submit），但如果你不想让他提交，就可以用e.preventDefault();

打个比方：
1
2
3
4
5
6
7
$(document).ready(function(){
         
            $("button").click(function(e){
                $("#show").fadeTo("fast",0);
                e.preventDefault();
            });
 }
在一个form里有button，还有一个id=show的div（上点颜色），你可以保留e.preventDefault();和去掉e.preventDefault();试试看，效果不同的。


line-height:2 表示两倍的font-size大小 比如font-size:20px 那么line-height:40px

文字在行高里面一定是居中的

h5 里面的 header nav 等等标签 跟div是没有区别的

script:src === <script src=“”></script>


cache 表示那些文件会被缓存下来 network 哪些文件可以在网络连接的情况下访问