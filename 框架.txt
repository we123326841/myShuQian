冒泡是从里往外 捕获是从外往里

Uncaught ReferenceError: ho is not defined: 就是没有申明

Cannot read property 'ho' of undefined :undefined.ho

 //微软用法
    var btn = document.getElementById("div1");
    btn.attachEvent("onclick",function (e) {
        window.event.srcElement 
    });

其中     window.event.srcElement  相当于 w3c的e.target

delegate
 可以为动态添加的元素添加事件,传统的事件解决不了

组件 插件 框架 是一个意思

js是不支持私有属性的

less 完全支持css语法 可以完全把css内容复制给less


dist


php运行环境:用来执行php代码的,然后返回结果给客户端 如果没有php运行环境 客户端得不到返回结果而是直接下载php文件
js运行环境(Node) 用来执行js代码的 如果没有Node环境  客户端得不到返回结果而是直接下载js文件


Node 是js运行环境 类似php的运行环境 用来运行代码的  运行完之后返回结果给客户端

Node只能运行 ES 无法使用Bom和Dom

Node.js其实就是从chrome(可以运行js代码)移植过来的 放在服务端  所以服务器也可以运行js代码    用的V8引擎



js一般是运行在浏览器上的

Nodejs 类似于java 运行环境jdk

node可以执行js代码 在命令行就得到验证(frame wanghao$ node js.js) 没有用浏览器
Node用途 :
做动态网站 


客户端与服务器只能互相传字符


nodejs在服务端执行js代码

node.js 是一个允许开发人员使用 JavaScript 语言编写服务器端代码的框架

表达式的方式是单向绑定{{user.name}} {{‘hello ’ + ‘ world’}}


$scope的方式是双向绑定

ng-cloak在angular执行完之后自动移除


a标签不能嵌套a标签

浏览器输入网址按回车 的都是get请求


打印的先后顺序 上面的一定代表打印代码先执行 下面的一定代表打印代码后执行


name.js文件是请求到的


延迟加载:图片在视口的时候加载  向上滑动 图片出现在视口并且图片没有缓存 就会加载 这样的好处是节约流量 性能优化

http://www.caniuse.com/#




node 01.js表示node在服务端执行服务端的01.js代码     此时的01.js是服务端的js代码 并且在服务端执行




node 异步原理是等所有代码执行完之后  再执行队列里面的任务


//我们所写的js代码都是在主线程执行的,不管是在浏览器还是用node执行都是在主线程执行   node底层的读写文件操作有开启线程 主线程js代码执行完毕之后 在执行读写操作 读写操作在c++开启的线程执行完才执行主线程js代码的callback (注意:读写文件操作一直是开启的线程执行,不会在主线程执行)

文件读写操作是耗时操作


我们请求php返回数据 是无法从服务器得到php源代码的

设置background图 可以先固定标签宽度然后随便设置一个高度尽量设置大一点 然后调整 百分比 到合适尺寸 测出你所要的那个区域的高度,再设置标签的宽度为测出的高度 然后在调整 高度的百分比 直到铺满为止
